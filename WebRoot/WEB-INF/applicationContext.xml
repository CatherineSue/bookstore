<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:aop="http://www.springframework.org/schema/aop"
             xmlns:tx="http://www.springframework.org/schema/tx"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
                     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                     http://www.springframework.org/schema/context
                     http://www.springframework.org/schema/context/spring-context-3.0.xsd
                     http://www.springframework.org/schema/aop
                     http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
                     http://www.springframework.org/schema/tx
                     http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
    
    <bean id="datasource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://123.206.79.126/bookstore?characterEncoding=utf-8"></property>
		<property name="username" value="bookstore_dev" /> 
		<property name="password" value="hopeaccomplish" />
		<!-- 数据库连接池保持的最小连接数 -->
		<property name="minIdle" value="1" />
		<!-- 数据库连接池保持的最大连接数 --> 
		<property name="maxIdle" value="30" />
		<!--
			当数据库连接因为某种原因断掉之后，再重新从连接池中拿另外一个连接时实际上这个连接可能
			已经无效，所以为了确保所拿到的连接全都有效需要在获取连接，返回连接以及连接空闲时进行
			有效性验证 下面3个设置为ture时进行验证，默认为false
		 -->
		<!-- 取得连接时是否进行有效性验证 -->
		<property name="testOnBorrow" value="true" />
		<!-- 返回连接时是否进行有效性验证 -->
		<property name="testOnReturn" value="true" />
		<!-- 连接空闲时是否进行有效性验证 -->
		<property name="testWhileIdle" value="true" />
		
	</bean>             
                     
                     
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="datasource" />
		<!-- 注意：我用的是Annotation的方式配置的Hibernate，这里的property的name是annotatedClasses -->
		<property name="mappingResources">
			<list>
				<value>com/bookstore/domain/Address.hbm.xml</value>
				<value>com/bookstore/domain/Apprise.hbm.xml</value>
				<value>com/bookstore/domain/Book.hbm.xml</value>
				<value>com/bookstore/domain/BookType.hbm.xml</value>
				<value>com/bookstore/domain/BuyItem.hbm.xml</value>
				<value>com/bookstore/domain/CartItem.hbm.xml</value>
				<value>com/bookstore/domain/Order.hbm.xml</value>
				<value>com/bookstore/domain/Picture.hbm.xml</value>
				<value>com/bookstore/domain/Publisher.hbm.xml</value>
				<value>com/bookstore/domain/User.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
			    <!-- 设置Hibernate方言 -->
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<!-- 是否打印sql -->
				<prop key="hibernate.show_sql">true</prop>
				<!-- 格式化sql -->
				<prop key="hibernate.format_sql">true</prop>
				<!-- 是否自动更新表 -->
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.current_session_context_class">thread</prop>
				<!-- 最大抓取深度，如果为0，则关闭默认的外连接抓取。建议值为0-3 -->
				<prop key="hibernate.max_fetch_depth">1</prop>
				<!-- 用于生成有助于调试的注释信息，默认为关闭 -->
				<prop key="hibernate.use_sql_comments">true</prop>
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
 		  		<prop key="hibernate.cache.use_query_cache">false</prop>
			</props>
		</property>
	</bean>                 
    
    
    
    
	
	<bean id="addressDAO" class="com.bookstore.dao.impl.AddressDAOImpl">
 		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<bean id="appriseDAO" class="com.bookstore.dao.impl.AppriseDAOImpl">
 		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<bean id="bookDAO" class="com.bookstore.dao.impl.BookDAOImpl">
 		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<bean id="bookTypeDAO" class="com.bookstore.dao.impl.BookTypeDAOImpl">
 		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<bean id="buyItemDAO" class="com.bookstore.dao.impl.BuyItemDAOImpl">
 		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<bean id="cartItemDAO" class="com.bookstore.dao.impl.CartItemDAOImpl">
 		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<bean id="orderDAO" class="com.bookstore.dao.impl.OrderDAOImpl">
 		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<bean id="pictureDAO" class="com.bookstore.dao.impl.PictureDAOImpl">
 		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<bean id="publisherDAO" class="com.bookstore.dao.impl.PublisherDAOImpl">
 		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<bean id="userDAO" class="com.bookstore.dao.impl.UserDAOImpl">
 		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	    
    
    
    
    
    
	
	<bean id="cartService" class="com.bookstore.service.impl.CartServiceImpl">
		<property name="cartItemDAO" ref="cartItemDAO" />
		<property name="buyItemDAO" ref="buyItemDAO"/>
		<property name="bookDAO" ref="bookDAO"/>
	</bean>
	
	<bean id="convertorService" class="com.bookstore.service.impl.ConvertorServiceImpl">
		<property name="bookDAO" ref="bookDAO"/>
		<property name="pictureDAO" ref="pictureDAO"/>
		<property name="buyItemDAO" ref="buyItemDAO"/>
		<property name="addressDAO" ref="addressDAO"/>
		<property name="orderDAO" ref="orderDAO"/>
	</bean>
	
	<bean id="buyService" class="com.bookstore.service.impl.BuyServiceImpl">
		<property name="orderDAO" ref="orderDAO" />
		<property name="buyItemDAO" ref="buyItemDAO"/>
		<property name="bookDAO" ref="bookDAO"/>
	</bean>
	
	<bean id="loginService" class="com.bookstore.service.impl.LoginServiceImpl">
		<property name="userDAO" ref="userDAO" />
	</bean>
	
	<bean id="registerService" class="com.bookstore.service.impl.RegisterServiceImpl">
		<property name="userDAO" ref="userDAO" />
	</bean>
	
	<bean id="findPasswordService" class="com.bookstore.service.impl.FindPasswordServiceImpl">
		<property name="userDao" ref="userDAO"/>
	</bean>
	
	<bean id="bookDetailService" class="com.bookstore.service.impl.BookDetailServiceImpl">
		<property name="bookDao" ref="bookDAO"/>
		<property name="appriseDao" ref="appriseDAO"/>
		<property name="publisherDao" ref="publisherDAO"/>
	</bean>
	
	<bean id="addressService" class="com.bookstore.service.impl.AddressServiceImpl">
		<property name="addressDao" ref="addressDAO"/>
	</bean>
	
	<bean id="personalInfoService" class="com.bookstore.service.impl.PersonalInfoServiceImpl">
		<property name="orderDAO" ref="orderDAO"/>
		<property name="userDAO" ref="userDAO"/>
		<property name="addressDAO" ref="addressDAO"/>
		<property name="buyItemDAO" ref="buyItemDAO"/>
		<property name="bookDAO" ref="bookDAO"/>
	</bean >
	
	<bean id="searchService" class="com.bookstore.service.impl.SearchServiceImpl">
		<property name="bookDAO" ref="bookDAO"/>
		<property name="bookTypeDAO" ref="bookTypeDAO"/>
		<property name="publisherDAO" ref="publisherDAO"/>
	</bean>

	<bean id="selectBookService" class="com.bookstore.service.impl.SelectBookServiceImpl">
		<property name="bookTypeDAO" ref="bookTypeDAO" />
		<property name="bookDAO" ref="bookDAO" />
	</bean>
	
	<bean id="appriseService" class="com.bookstore.service.impl.AppriseServiceImpl">
		<property name="buyItemDao" ref="buyItemDAO" />
		<property name="appriseDao" ref="appriseDAO" />
		<property name="orderDao" ref="orderDAO" />
	</bean>




</beans>
